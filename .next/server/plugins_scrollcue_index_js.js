"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "plugins_scrollcue_index_js";
exports.ids = ["plugins_scrollcue_index_js"];
exports.modules = {

/***/ "./plugins/scrollcue/index.js":
/*!************************************!*\
  !*** ./plugins/scrollcue/index.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**-----------------------\n\n scrollCue.js - ver.2.0.0\n URL : https://prjct-samwest.github.io/scrollCue/\n\n created by SamWest.\n Copyright (c) 2020 SamWest.\n This plugin is released under the MIT License.\n\n -----------------------**/ const scrollCue = function() {\n    let $f = {}, $e, $q;\n    let resizeTimer = 0, scrollEnable = true, enable = true, ds = false, pcr = false;\n    let $op, $defaultOptions = {\n        duration: 600,\n        interval: -0.7,\n        percentage: 0.75,\n        enable: true,\n        docSlider: false,\n        pageChangeReset: false\n    };\n    $f = {\n        setEvents: function(startHash) {\n            let scroll = function() {\n                if (scrollEnable) {\n                    requestAnimationFrame(function() {\n                        scrollEnable = true;\n                        if (enable) {\n                            $f.setQuery();\n                            $f.runQuery();\n                        }\n                    });\n                    scrollEnable = false;\n                }\n            };\n            if (enable && !startHash) {\n                window.addEventListener(\"load\", $f.runQuery);\n            }\n            window.addEventListener(\"scroll\", scroll);\n            if (ds) {\n                let pages = docSlider.getElements().pages;\n                for(let i = 0; i < pages.length; i++){\n                    let page = pages[i];\n                    page.addEventListener(\"scroll\", function(e) {\n                        let c = docSlider.getCurrentIndex() + \"\";\n                        let i = e.target.getAttribute(\"data-ds-index\");\n                        if (c !== i) return false;\n                        if (docSlider._getWheelEnable()) scroll();\n                    });\n                }\n            }\n            window.addEventListener(\"resize\", function() {\n                if (resizeTimer > 0) {\n                    clearTimeout(resizeTimer);\n                }\n                resizeTimer = setTimeout(function() {\n                    if (enable) {\n                        $f.searchElements();\n                        $f.setQuery();\n                        $f.runQuery();\n                    }\n                }, 200);\n            });\n        },\n        setOptions: function(tgt, add) {\n            let resultOptions = {};\n            if (typeof tgt === \"undefined\") return;\n            Object.keys(tgt).forEach(function(key) {\n                if (Object.prototype.toString.call(tgt[key]) === \"[object Object]\") {\n                    resultOptions[key] = $f.setOptions(tgt[key], add[key]);\n                } else {\n                    resultOptions[key] = tgt[key];\n                    if (typeof add !== \"undefined\" && typeof add[key] !== \"undefined\") {\n                        resultOptions[key] = add[key];\n                    }\n                }\n            });\n            return resultOptions;\n        },\n        searchElements: function() {\n            let parents, selector;\n            $e = [];\n            parents = document.querySelectorAll(\"[data-cues]:not([data-disabled])\");\n            for(let i = 0; i < parents.length; i++){\n                let parent = parents[i];\n                for(let j = 0; j < parent.children.length; j++){\n                    let child = parent.children[j];\n                    $f.setAttrPtoC(child, \"data-cue\", parent, \"data-cues\", \"\");\n                    $f.setAttrPtoC(child, \"data-duration\", parent, \"data-duration\", false);\n                    $f.setAttrPtoC(child, \"data-interval\", parent, \"data-interval\", false);\n                    $f.setAttrPtoC(child, \"data-sort\", parent, \"data-sort\", false);\n                    $f.setAttrPtoC(child, \"data-addClass\", parent, \"data-addClass\", false);\n                    $f.setAttrPtoC(child, \"data-group\", parent, \"data-group\", false);\n                    $f.setAttrPtoC(child, \"data-delay\", parent, \"data-delay\", false);\n                }\n                parent.setAttribute(\"data-disabled\", \"true\");\n            }\n            selector = document.querySelectorAll('[data-cue]:not([data-show=\"true\"])');\n            for(let i = 0; i < selector.length; i++){\n                let elm = selector[i];\n                $e.push({\n                    elm: elm,\n                    cue: $f.getAttr(elm, \"data-cue\", \"fadeIn\"),\n                    duration: Number($f.getAttr(elm, \"data-duration\", $op.duration)),\n                    interval: Number($f.getAttr(elm, \"data-interval\", $op.interval)),\n                    order: $f.getOrderNumber(elm),\n                    sort: $f.getAttr(elm, \"data-sort\", null),\n                    addClass: $f.getAttr(elm, \"data-addClass\", null),\n                    group: $f.getAttr(elm, \"data-group\", null),\n                    delay: Number($f.getAttr(elm, \"data-delay\", 0))\n                });\n            }\n            if (ds) {\n                let pages = docSlider.getElements().pages.length;\n                for(let i = 0; i < pages; i++){\n                    let elms = document.querySelectorAll('[data-ds-index=\"' + i + '\"] [data-cue]:not([data-scpage])');\n                    for(let j = 0; j < elms.length; j++){\n                        elms[j].setAttribute(\"data-scpage\", i);\n                    }\n                }\n            }\n        },\n        sortElements: function() {\n            let obj = arguments[0];\n            let keys = [].slice.call(arguments).slice(1);\n            for(let i = 0; i < keys.length; i++){\n                obj.sort(function(a, b) {\n                    let asc = typeof keys[i][1] === \"undefined\" ? true : keys[i][1];\n                    let key = keys[i][0];\n                    if (a[key] > b[key]) return asc ? 1 : -1;\n                    if (a[key] < b[key]) return asc ? -1 : 1;\n                    return 0;\n                });\n            }\n        },\n        randElements: function(array) {\n            for(let i = array.length - 1; i > 0; i--){\n                let j = Math.floor(Math.random() * (i + 1));\n                let tmp = array[i];\n                array[i] = array[j];\n                array[j] = tmp;\n            }\n            return array;\n        },\n        setDurationValue: function(interval, pElm, cInt) {\n            if (typeof pElm === \"undefined\") {\n                return interval;\n            }\n            let result = interval;\n            let pDura = pElm.duration;\n            if (!((cInt + \"\").indexOf(\".\") !== -1)) {\n                result = result + pDura + cInt;\n            } else {\n                result = result + pDura + pDura * cInt;\n            }\n            result = result < 0 ? 0 : result;\n            return result;\n        },\n        getOrderNumber: function(elm) {\n            if (elm.hasAttribute(\"data-order\")) {\n                let num = Number(elm.getAttribute(\"data-order\"));\n                return num >= 0 ? num : Math.pow(2, 53) - 1 + num;\n            } else {\n                return Math.pow(2, 52) - 1;\n            }\n        },\n        setAttrPtoC: function(child, attrC, parent, attrP, value) {\n            if (parent.hasAttribute(attrP)) {\n                if (!child.hasAttribute(attrC)) {\n                    child.setAttribute(attrC, parent.getAttribute(attrP));\n                }\n            } else {\n                if (value !== false) {\n                    child.setAttribute(attrC, value);\n                }\n            }\n        },\n        getAttr: function(elm, attr, value) {\n            if (elm.hasAttribute(attr)) {\n                return elm.getAttribute(attr);\n            } else {\n                return value;\n            }\n        },\n        getOffsetTop: function(elm) {\n            let rect = elm.getBoundingClientRect();\n            let scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n            return rect.top + scrollTop; // offset().top;\n        },\n        setClassNames: function(elm, classNames) {\n            if (!classNames) {\n                return;\n            }\n            let classNamesArr = classNames.split(\" \");\n            for(let i = 0; i < classNamesArr.length; i++){\n                elm.classList.add(classNamesArr[i]);\n            }\n        },\n        setQuery: function() {\n            $q = {};\n            for(let i = 0; i < $e.length; i++){\n                let elm = $e[i];\n                let group = elm.group ? elm.group : \"$\" + $f.getOffsetTop(elm.elm);\n                if (elm.elm.hasAttribute(\"data-show\")) {\n                    continue;\n                }\n                if (ds) {\n                    let iIndex = elm.elm.getAttribute(\"data-scpage\");\n                    let cIndex = docSlider.getCurrentIndex() + \"\";\n                    if (iIndex !== cIndex && !(iIndex === null)) {\n                        continue;\n                    }\n                }\n                if (typeof $q[group] === \"undefined\") {\n                    $q[group] = [];\n                }\n                $q[group].push(elm);\n            }\n        },\n        runQuery: function() {\n            let groups = Object.keys($q);\n            for(let i = 0; i < groups.length; i++){\n                let elms = $q[groups[i]];\n                if ($f.isElementIn(elms[0].elm)) {\n                    if (elms[0].sort === \"reverse\") {\n                        elms.reverse();\n                    } else if (elms[0].sort === \"random\") {\n                        $f.randElements(elms);\n                    }\n                    $f.sortElements(elms, [\n                        \"order\"\n                    ]);\n                    let interval = 0;\n                    for(let j = 0; j < elms.length; j++){\n                        (function(j) {\n                            elms[j].elm.setAttribute(\"data-show\", \"true\");\n                            $f.setClassNames(elms[j].elm, elms[j].addClass);\n                            interval = $f.setDurationValue(interval, elms[j - 1], elms[j].interval);\n                            elms[j].elm.style.animationName = elms[j].cue;\n                            elms[j].elm.style.animationDuration = elms[j].duration + \"ms\";\n                            elms[j].elm.style.animationTimingFunction = \"ease\";\n                            elms[j].elm.style.animationDelay = interval + elms[j].delay + \"ms\";\n                            elms[j].elm.style.animationDirection = \"normal\";\n                            elms[j].elm.style.animationFillMode = \"both\";\n                        })(j);\n                    }\n                    delete $q[groups[i]];\n                }\n            }\n        },\n        isElementIn: function(elm) {\n            let scrollEndJudge = elm.hasAttribute(\"data-scpage\") ? $f.isScrollEndWithDocSlider : $f.isScrollEnd;\n            return window.pageYOffset > $f.getOffsetTop(elm) - window.innerHeight * $op.percentage || scrollEndJudge();\n        },\n        isScrollEnd: function() {\n            let body = window.document.body;\n            let html = window.document.documentElement;\n            let scrollTop = body.scrollTop || html.scrollTop;\n            return scrollTop >= html.scrollHeight - html.clientHeight;\n        },\n        isScrollEndWithDocSlider: function() {\n            let page = docSlider.getCurrentPage();\n            return page.scrollTop >= page.scrollHeight - page.clientHeight;\n        }\n    };\n    return {\n        init: function(options) {\n            $op = $f.setOptions($defaultOptions, options);\n            enable = $op.enable;\n            ds = $op.docSlider;\n            pcr = $op.pageChangeReset;\n            if (ds) {\n                return;\n            }\n            $f.setEvents();\n            $f.searchElements();\n            $f.setQuery();\n        },\n        update: function() {\n            if (enable) {\n                $f.searchElements();\n                $f.setQuery();\n                $f.runQuery();\n            }\n        },\n        enable: function(bool) {\n            enable = typeof bool === \"undefined\" ? !enable : bool;\n            scrollCue.update();\n        },\n        _hasDocSlider: function() {\n            return ds;\n        },\n        _hasPageChangeReset: function() {\n            return pcr;\n        },\n        _initWithDocSlider: function(startHash) {\n            $f.setEvents(startHash);\n            $f.searchElements();\n            $f.setQuery();\n        },\n        _updateWithDocSlider: function() {\n            if (enable) {\n                $f.setQuery();\n                $f.runQuery();\n            }\n        },\n        _searchElements: function() {\n            $f.searchElements();\n        }\n    };\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (scrollCue);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./plugins/scrollcue/index.js\n");

/***/ })

};
;